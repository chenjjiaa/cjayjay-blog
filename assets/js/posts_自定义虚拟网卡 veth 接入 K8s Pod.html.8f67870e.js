"use strict";(self.webpackChunkcjayjay_blog=self.webpackChunkcjayjay_blog||[]).push([[182],{6262:(s,e)=>{e.A=(s,e)=>{const n=s.__vccOpts||s;for(const[s,i]of e)n[s]=i;return n}},2513:(s,e,n)=>{n.r(e),n.d(e,{comp:()=>d,data:()=>p});var i=n(641),a=n(33);const l={},d=(0,n(6262).A)(l,[["render",function(s,e){const n=(0,i.g2)("VPCard");return(0,i.uX)(),(0,i.CE)("div",null,[e[0]||(e[0]=(0,i.Fv)('<h1 id="自定义虚拟网卡-veth-接入-k8s-pod" tabindex="-1"><a class="header-anchor" href="#自定义虚拟网卡-veth-接入-k8s-pod"><span>自定义虚拟网卡 veth 接入 K8s Pod</span></a></h1><blockquote><p>目的是观察 Pod 的网络数据包是如何向外部发送的，经过什么网络接口，并抓包监听</p></blockquote><p><strong>步骤：</strong></p><ul><li>宿主机创建两块虚拟网卡 veth</li><li>将其中一块虚拟网卡添加到 Pod 中</li><li>启动 Pod 和 宿主机中的 veth</li><li>给 Pod 中的虚拟网卡添加 IP</li><li>宿主机 tcpdump 监听本机新建的虚拟网卡</li><li>Pod 发送 ping 报文，观察报文</li></ul><blockquote><p><strong>注意：</strong></p><ul><li>K8s Pod 环境并没有支持简易 Linux 系统功能，比如 ifconfig、ip、route、tcpdump、ping 等工具/命令均无法使用。</li><li>这部分工作需要在宿主机借助 netns 来访问</li></ul></blockquote><p>先在宿主机创建一对虚拟网络设备</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip link add veth-a type veth peer name veth-b</span></span>\n<span class="line"><span># 可以在两头都加上 name; 也可以都省略</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于是在宿主机创建的，所以在宿主机的网络命名空间里，能看到我们刚创建好的这一对虚拟网络设备</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cjj@cjj-workspace ~&gt; ip a | grep veth</span></span>\n<span class="line"><span>341: veth-b@veth-a: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span></span>\n<span class="line"><span>342: veth-a@veth-b: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们先看看 <code>ip netns</code> 这些 netns 的 id，再挑选一个命名空间，进入后查询 IP</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>chenjunjia@cjj-workspace ~&gt; sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ip a</span></span>\n<span class="line"><span>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span></span>\n<span class="line"><span>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span></span>\n<span class="line"><span>    inet 127.0.0.1/8 scope host lo</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span>\n<span class="line"><span>    inet6 ::1/128 scope host</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span>\n<span class="line"><span>9: eth0@if10: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 9000 qdisc noqueue state UP group default</span></span>\n<span class="line"><span>    link/ether 88:66:ac:10:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span></span>\n<span class="line"><span>    inet 172.16.0.3/24 brd 172.16.0.255 scope global eth0</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span>\n<span class="line"><span>    inet6 fe80::8a66:acff:fe10:3/64 scope link</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询到了 IP 为 <code>172.16.0.3</code>，再看看 Pod 的 IP 信息，这样子就知道这个 netns 是对应哪一个 Pod 的了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>chenjunjia@cjj-workspace ~&gt; kubectl get pods -o wide</span></span>\n<span class="line"><span>NAME                                     READY   STATUS    RESTARTS        AGE     IP                NODE            NOMINATED NODE   READINESS GATES</span></span>\n<span class="line"><span>mongodb-arbiter-0                        1/1     Running   0               6d20h   172.16.0.3        cjj-workspace   &lt;none&gt;           &lt;none&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将虚拟网络设备对其中的一端，接入到某一个 Pod 的网络命名空间当中</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip link set veth-b netns &lt;netns_id&gt;</span></span>\n<span class="line"><span># sudo ip link set veth-b netns cni-101ef36d-7d42-beef-4ecc-0b28decf0833</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于将 <code>veth-b</code> 这个虚拟网卡设备放入了 Pod 的网络命名空间中，所以再使用 <code>ip a | grep veth</code> 时就看不到这个设备了</p><p>再进入这个 netns 中看，多了一块虚拟网卡，<code>veth-b</code> 已经跑进去了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>chenjunjia@cjj-workspace ~&gt; sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ip a</span></span>\n<span class="line"><span>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span></span>\n<span class="line"><span>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span></span>\n<span class="line"><span>    inet 127.0.0.1/8 scope host lo</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span>\n<span class="line"><span>    inet6 ::1/128 scope host</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span>\n<span class="line"><span>9: eth0@if10: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 9000 qdisc noqueue state UP group default</span></span>\n<span class="line"><span>    link/ether 88:66:ac:10:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span></span>\n<span class="line"><span>    inet 172.16.0.3/24 brd 172.16.0.255 scope global eth0</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span>\n<span class="line"><span>    inet6 fe80::8a66:acff:fe10:3/64 scope link</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span>\n<span class="line"><span>341: veth-b@if342: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span></span>\n<span class="line"><span>    link/ether da:ff:eb:10:57:4d brd ff:ff:ff:ff:ff:ff link-netnsid 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实也可以进到 Pod 中看，但是我现在这个 mongo-db 容器里面没安装 ip 和 ifconfig 插件，所以只能通过网络命名空间的方式去查看</p><p>我们在外面通过网络命名空间给 Pod 的虚拟网卡去设置 IP，然后在外面查看这个虚拟网卡的新 IP</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ip addr add 172.168.0.100/24 dev veth-b</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>给 <code>veth-a</code> 也设置一下 IP（不设置也行，看你想 ping 谁）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip addr add 172.168.0.200/24 dev veth-a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此时 <code>veth-b</code> 已经有 IP 了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>chenjunjia@cjj-workspace ~&gt; sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ip a</span></span>\n<span class="line"><span>……</span></span>\n<span class="line"><span>……</span></span>\n<span class="line"><span>341: veth-b@if342: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</span></span>\n<span class="line"><span>    link/ether da:ff:eb:10:57:4d brd ff:ff:ff:ff:ff:ff link-netnsid 0</span></span>\n<span class="line"><span>    inet 172.168.0.100/24 scope global veth-b</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把 <code>veth-b</code> 启动起来</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ip link set dev veth-b up</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 显示 &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; 这个状态就是启动起来了</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>341: veth-b@if342: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state LOWERLAYERDOWN group default qlen 1000</span></span>\n<span class="line"><span>    link/ether da:ff:eb:10:57:4d brd ff:ff:ff:ff:ff:ff link-netnsid 0</span></span>\n<span class="line"><span>    inet 172.168.0.100/24 scope global veth-b</span></span>\n<span class="line"><span>       valid_lft forever preferred_lft forever</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把宿主机的 <code>veth-a</code> 也启动起来，显示 <code>&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</code> 这个状态也是启动起来了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip link set dev veth-a up</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># ip a 输出：</span></span>\n<span class="line"><span>342: veth-a@if341: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span></span>\n<span class="line"><span>    link/ether 3a:af:2b:67:d3:75 brd ff:ff:ff:ff:ff:ff link-netns cni-101ef36d-7d42-beef-4ecc-0b28decf0833</span></span>\n<span class="line"><span>    inet6 fe80::38af:2bff:fe67:d375/64 scope link</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以先看看 Pod 里面的路由表：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ip route</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 输出：</span></span>\n<span class="line"><span>chenjunjia@cjj-workspace ~&gt; sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ip route</span></span>\n<span class="line"><span>default via 172.16.0.1 dev eth0</span></span>\n<span class="line"><span>172.16.0.0/24 dev eth0 proto kernel scope link src 172.16.0.3</span></span>\n<span class="line"><span>172.16.0.0/12 dev eth0</span></span>\n<span class="line"><span>172.168.0.0/24 dev veth-b proto kernel scope link src 172.168.0.100</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为 Pod 中没有 ping 工具，所以我们继续在宿主机通过 netns 来进行 ping 命令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ping &lt;目标IP地址或域名&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># ping 一个不属于所有网卡的网段，在宿主机监听 arp</span></span>\n<span class="line"><span># Pod中：sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833 ping -c 3 171.168.0.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>宿主机监听 <code>veth-a</code>。如果在后面不加 arp 或 icmp，那么就是监听流过此网卡的全部报文</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo tcpdump -i veth-a -nn arp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Pod 来 ping 一个 <code>veth-b</code> 网段内不存在的 IP</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo ip netns exec sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833  ping -c 3 172.168.0.101</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果展示：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># Pod 内的 ping 请求</span></span>\n<span class="line"><span>chenjunjia@cjj-workspace ~&gt; sudo ip netns exec cni-101ef36d-7d42-beef-4ecc-0b28decf0833  ping -c 3 172.168.0.101</span></span>\n<span class="line"><span>PING 172.168.0.101 (172.168.0.101) 56(84) bytes of data.</span></span>\n<span class="line"><span>From 172.168.0.100 icmp_seq=1 Destination Host Unreachable</span></span>\n<span class="line"><span>From 172.168.0.100 icmp_seq=2 Destination Host Unreachable</span></span>\n<span class="line"><span>From 172.168.0.100 icmp_seq=3 Destination Host Unreachable</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>--- 172.168.0.101 ping statistics ---</span></span>\n<span class="line"><span>3 packets transmitted, 0 received, +3 errors, 100% packet loss, time 2049ms</span></span>\n<span class="line"><span>pipe 3</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 宿主机的监听</span></span>\n<span class="line"><span>chenjunjia@cjj-workspace ~&gt; sudo tcpdump -i veth-a -nn arp</span></span>\n<span class="line"><span>tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span></span>\n<span class="line"><span>listening on veth-a, link-type EN10MB (Ethernet), capture size 262144 bytes</span></span>\n<span class="line"><span>15:50:18.068706 ARP, Request who-has 172.168.0.101 tell 172.168.0.100, length 28</span></span>\n<span class="line"><span>15:50:19.093545 ARP, Request who-has 172.168.0.101 tell 172.168.0.100, length 28</span></span>\n<span class="line"><span>15:50:20.117456 ARP, Request who-has 172.168.0.101 tell 172.168.0.100, length 28</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',39)),(0,i.bF)(n,(0,a._B)((0,i.Ng)({title:"chenjjiaa",desc:"沉浸在万花筒的幻术之中吧...",logo:"./github-logo.jpg",link:"https://github.com/chenjjiaa",background:"rgba(253, 230, 138, 0.15)"})),null,16)])}]]),p=JSON.parse('{"path":"/posts/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1%20veth%20%E6%8E%A5%E5%85%A5%20K8s%20Pod.html","title":"自定义虚拟网卡 veth 接入 K8s Pod","lang":"zh-CN","frontmatter":{"title":"自定义虚拟网卡 veth 接入 K8s Pod","cover":"./R-C.127ba08cf553e14a8dbf50dee1c2242e.jpg","date":"2024-08-10T00:00:00.000Z","tag":["后端","kubernetes","linux"],"excerpt":"<p>目的是观察 Pod 的网络数据包是如何向外部发送的，经过什么网络接口，并抓包监听。</p>"},"headers":[],"git":{"createdTime":1727023492000,"updatedTime":1727023492000,"contributors":[{"name":"励志买套上海苏河湾大平层","email":"94773058+chenjjiaa@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.36,"words":1608},"filePathRelative":"posts/自定义虚拟网卡 veth 接入 K8s Pod.md","localizedDate":"2024年8月10日"}')}}]);